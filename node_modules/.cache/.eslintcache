[{"/Users/Harold/Desktop/Coding-projects/meme-blog/src/index.js":"1","/Users/Harold/Desktop/Coding-projects/meme-blog/src/App.js":"2","/Users/Harold/Desktop/Coding-projects/meme-blog/src/reportWebVitals.js":"3","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/navbar/Links.js":"4","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/navbar/SideProfile.js":"5","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/navbar/Navbar.js":"6","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/saved/Saved.js":"7","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/top/TopFeeds.js":"8","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/header/Header.js":"9","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/Home.js":"10","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/MemeFeed.js":"11","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/CreateMeme.js":"12","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/DeleteModal.js":"13","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/login/Login.js":"14","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/login/firebase-config.js":"15"},{"size":535,"mtime":1656206134000,"results":"16","hashOfConfig":"17"},{"size":3794,"mtime":1656551714000,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1656206134000,"results":"19","hashOfConfig":"17"},{"size":1139,"mtime":1656550940000,"results":"20","hashOfConfig":"17"},{"size":193,"mtime":1656551154000,"results":"21","hashOfConfig":"17"},{"size":391,"mtime":1656551128000,"results":"22","hashOfConfig":"17"},{"size":1642,"mtime":1656375978000,"results":"23","hashOfConfig":"17"},{"size":159,"mtime":1656353424000,"results":"24","hashOfConfig":"17"},{"size":165,"mtime":1656551116000,"results":"25","hashOfConfig":"17"},{"size":1857,"mtime":1656543713000,"results":"26","hashOfConfig":"17"},{"size":2770,"mtime":1656378344000,"results":"27","hashOfConfig":"17"},{"size":943,"mtime":1656375976000,"results":"28","hashOfConfig":"17"},{"size":427,"mtime":1656295926000,"results":"29","hashOfConfig":"17"},{"size":824,"mtime":1656551035000,"results":"30","hashOfConfig":"17"},{"size":873,"mtime":1656544739000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1796lh3",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Harold/Desktop/Coding-projects/meme-blog/src/index.js",[],[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/App.js",["81"],[],"import './App.css';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Navbar from './components/navbar/Navbar';\nimport Header from './components/header/Header';\nimport Home from './components/home/Home';\nimport Saved from './components/saved/Saved';\nimport TopFeeds from './components/top/TopFeeds';\nimport { addDoc, collection } from 'firebase/firestore'\nimport { db } from './components/login/firebase-config';\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false)\n  const [blogContent, setBlogContent] = useState([])\n  const [savedFeeds, setSavedFeeds] = useState([])\n  const [numID, setNumID] = useState(1)\n  const [urlInput, setUrlInput] = useState('')\n  const [hasBlogs, setHasBlogs] = useState(false)\n  const [currentID, setCurrentID] = useState(null)\n\n  const postCollectionRef = collection(db, \"meme-post\")\n\n  const createBlogHandle = async () => {\n        await addDoc()\n        setHasBlogs(true)\n        setNumID(() => numID + 1)\n        setBlogContent([\n            ...blogContent, {\n                id: numID,\n                name: 'Harold Aquino',\n                src: urlInput,\n                likes: 0,\n                saved: false\n            }\n        ])\n        setUrlInput('')\n  }\n\n  const savedFeedHandle = (id) => {\n        setCurrentID(id)\n        setBlogContent(\n            blogContent.map(blog => {\n                if(blog.id === currentID) {\n                    return {\n                        ...blog, saved: true\n                    }\n                }\n            return blog\n            }\n        ))\n        const userSavedFeeds = blogContent.filter(blog => blog.saved === true)\n        setSavedFeeds(userSavedFeeds)\n  }  \n\n  const unsaveHandle = (id) => {\n        setCurrentID(id)\n        const newSavedFeeds = savedFeeds.filter(blogs => blogs.id !== currentID)\n        setSavedFeeds(newSavedFeeds)\n        setBlogContent(\n            blogContent.map(blog => {\n                if(blog.id === currentID) {\n                    return {\n                        ...blog, saved: false\n                    }\n                }\n            return blog\n            }\n        ))\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header \n          isAuth={isAuth}\n        />\n        <div className=\"content\">\n          <Navbar \n            isAuth={ isAuth }\n            setIsAuth={ setIsAuth }\n          />\n          <Switch >\n            <Route exact path=\"/\">\n              <Home \n                blogContent={ blogContent } \n                setBlogContent={ setBlogContent } \n                savedFeeds={ savedFeeds }\n                setSavedFeeds={ setSavedFeeds }\n                numID={ numID }\n                setNumID={ setNumID }\n                createBlogHandle={ createBlogHandle }\n                urlInput={ urlInput }\n                setUrlInput={ setUrlInput }\n                hasBlogs={ hasBlogs }\n                setHasBlogs={ setHasBlogs }\n                createBlogHandl={ createBlogHandle }\n                savedFeedHandle={ savedFeedHandle }\n                currentID={ currentID }\n                setCurrentID={ setCurrentID }\n              />\n            </Route>\n            <Route path=\"/topfeeds\">\n              <TopFeeds />\n            </Route>\n            <Route path=\"/saved\">\n              <Saved \n                setBlogContent={ setBlogContent }\n                savedFeeds={ savedFeeds } \n                setSavedFeeds= { setSavedFeeds }\n                currentID={ currentID }\n                setCurrentID={ setCurrentID }\n                unsaveHandle={ unsaveHandle }\n              />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n// https://color.adobe.com/search?q=social%20media\n","/Users/Harold/Desktop/Coding-projects/meme-blog/src/reportWebVitals.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/navbar/Links.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/navbar/SideProfile.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/navbar/Navbar.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/saved/Saved.js",["82"],[],"import './Saved.css'\nimport { useState } from 'react'\n\nconst Saved = ({ savedFeeds, setSavedFeeds, currentID, setCurrentID, unsaveHandle }) => {\n\n    return ( \n        <main className=\"saved-feeds\">\n            <h1>Saved Memes</h1>\n            { \n                savedFeeds.map(blog => (\n                    <div className=\"meme-feed-container\" key={blog.id}>\n                        <div className=\"user-who-posted\" >\n                            <p> { blog.name } </p>\n                            <button onClick={() => unsaveHandle(blog.id)} >Unsave</button>                           \n                        </div>\n                        <img src={ blog.src } alt=\"\" className=\"meme-img\" />\n                        <div className=\"user-interactions\">\n                            <div className=\"like-contents\">\n                                <button >Like</button>\n                                <p>  { blog.likes } Likes</p>\n                            </div>\n                        </div>                        \n                        {/* <div className=\"user-interactions\">\n                            <div className=\"like-contents\">\n                                <button onClick={() => likeHandle(blog.id)} >Like</button>\n                                <p>  { blog.likes } Likes</p>\n                            </div>\n                            <button>Share</button>\n                            <button onClick={() => savedFeedHandle(blog.id)} >Save</button>\n                        </div> */}\n                    </div>                    \n                ))\n            }\n        </main>\n     );\n}\n \nexport default Saved;","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/top/TopFeeds.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/header/Header.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/Home.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/MemeFeed.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/CreateMeme.js",["83"],[],"import { useEffect } from \"react\"\n\nconst CreateMeme = ({ \n        create, \n        showInputHandle, \n        createBtn, \n        urlInput ,\n        setUrlInput,\n        createBlogHandle\n}) => {\n\n\n    return ( \n        <article className=\"create-container\">\n            <div className=\"button-create-container\">\n                <p>Create a blog meme</p>\n                <button onClick={showInputHandle} > { createBtn } </button>\n            </div>\n            { create &&\n                <div className=\"input-container\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"URL\" \n                        value={ urlInput }  \n                        onChange={ (e) => setUrlInput(e.target.value) }\n                    /> \n                    <button onClick={ createBlogHandle } >Add to Feed</button>\n                </div>\n            }\n        </article>\n    );\n}\n \nexport default CreateMeme;","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/DeleteModal.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/login/Login.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/login/firebase-config.js",[],[],{"ruleId":"84","severity":1,"message":"85","line":21,"column":9,"nodeType":"86","messageId":"87","endLine":21,"endColumn":26},{"ruleId":"84","severity":1,"message":"88","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":18},{"ruleId":"84","severity":1,"message":"89","line":1,"column":10,"nodeType":"86","messageId":"87","endLine":1,"endColumn":19},"no-unused-vars","'postCollectionRef' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used."]
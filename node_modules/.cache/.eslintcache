[{"/Users/Harold/Desktop/Coding-projects/meme-blog/src/index.js":"1","/Users/Harold/Desktop/Coding-projects/meme-blog/src/App.js":"2","/Users/Harold/Desktop/Coding-projects/meme-blog/src/reportWebVitals.js":"3","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/navbar/Links.js":"4","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/navbar/SideProfile.js":"5","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/navbar/Navbar.js":"6","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/saved/Saved.js":"7","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/top/TopFeeds.js":"8","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/header/Header.js":"9","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/Home.js":"10","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/MemeFeed.js":"11","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/CreateMeme.js":"12","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/DeleteModal.js":"13","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/login/Login.js":"14"},{"size":535,"mtime":1656206134000,"results":"15","hashOfConfig":"16"},{"size":3576,"mtime":1656542262000,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1656206134000,"results":"18","hashOfConfig":"16"},{"size":282,"mtime":1656352048000,"results":"19","hashOfConfig":"16"},{"size":170,"mtime":1656210286000,"results":"20","hashOfConfig":"16"},{"size":303,"mtime":1656210484000,"results":"21","hashOfConfig":"16"},{"size":1642,"mtime":1656375978000,"results":"22","hashOfConfig":"16"},{"size":159,"mtime":1656353424000,"results":"23","hashOfConfig":"16"},{"size":156,"mtime":1656542148000,"results":"24","hashOfConfig":"16"},{"size":1857,"mtime":1656378496000,"results":"25","hashOfConfig":"16"},{"size":2770,"mtime":1656378344000,"results":"26","hashOfConfig":"16"},{"size":943,"mtime":1656375976000,"results":"27","hashOfConfig":"16"},{"size":427,"mtime":1656295926000,"results":"28","hashOfConfig":"16"},{"size":99,"mtime":1656542251000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1796lh3",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"33"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Harold/Desktop/Coding-projects/meme-blog/src/index.js",[],[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/App.js",["77"],[],"import './App.css';\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Navbar from './components/navbar/Navbar';\nimport Header from './components/header/Header';\nimport Home from './components/home/Home';\nimport Saved from './components/saved/Saved';\nimport TopFeeds from './components/top/TopFeeds';\nimport Login from './components/login/Login';\n\nfunction App() {\n  const [blogContent, setBlogContent] = useState([])\n  const [savedFeeds, setSavedFeeds] = useState([])\n  const [numID, setNumID] = useState(1)\n  const [urlInput, setUrlInput] = useState('')\n  const [hasBlogs, setHasBlogs] = useState(false)\n  const [currentID, setCurrentID] = useState(null)\n\n  const createBlogHandle = () => {\n        setHasBlogs(true)\n        setNumID(() => numID + 1)\n        setBlogContent([\n            ...blogContent, {\n                id: numID,\n                name: 'Harold Aquino',\n                src: urlInput,\n                likes: 0,\n                saved: false\n            }\n        ])\n        setUrlInput('')\n  }\n\n  const savedFeedHandle = (id) => {\n        setCurrentID(id)\n        setBlogContent(\n            blogContent.map(blog => {\n                if(blog.id === currentID) {\n                    return {\n                        ...blog, saved: true\n                    }\n                }\n            return blog\n            }\n        ))\n        const userSavedFeeds = blogContent.filter(blog => blog.saved === true)\n        setSavedFeeds(userSavedFeeds)\n  }  \n\n  const unsaveHandle = (id) => {\n        setCurrentID(id)\n        const newSavedFeeds = savedFeeds.filter(blogs => blogs.id !== currentID)\n        setSavedFeeds(newSavedFeeds)\n        setBlogContent(\n            blogContent.map(blog => {\n                if(blog.id === currentID) {\n                    return {\n                        ...blog, saved: false\n                    }\n                }\n            return blog\n            }\n        ))\n  }\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div className=\"content\">\n          <Navbar />\n          <Switch >\n            <Route exact path=\"/\">\n              <Home \n                blogContent={ blogContent } \n                setBlogContent={ setBlogContent } \n                savedFeeds={ savedFeeds }\n                setSavedFeeds={ setSavedFeeds }\n                numID={ numID }\n                setNumID={ setNumID }\n                createBlogHandle={ createBlogHandle }\n                urlInput={ urlInput }\n                setUrlInput={ setUrlInput }\n                hasBlogs={ hasBlogs }\n                setHasBlogs={ setHasBlogs }\n                createBlogHandl={ createBlogHandle }\n                savedFeedHandle={ savedFeedHandle }\n                currentID={ currentID }\n                setCurrentID={ setCurrentID }\n              />\n            </Route>\n            <Route path=\"/topfeeds\">\n              <TopFeeds />\n            </Route>\n            <Route path=\"/saved\">\n              <Saved \n                setBlogContent={ setBlogContent }\n                savedFeeds={ savedFeeds } \n                setSavedFeeds= { setSavedFeeds }\n                currentID={ currentID }\n                setCurrentID={ setCurrentID }\n                unsaveHandle={ unsaveHandle }\n              />\n            </Route>\n            <Route path=\"/login\">\n                <Login />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n// https://color.adobe.com/search?q=social%20media\n","/Users/Harold/Desktop/Coding-projects/meme-blog/src/reportWebVitals.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/navbar/Links.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/navbar/SideProfile.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/navbar/Navbar.js",["78"],[],"import { Link } from 'react-router-dom'\nimport './Navbar.css'\nimport Links from './Links';\nimport SideProfile from './SideProfile';\n\nconst Navbar = () => {\n    return ( \n        <nav className='nav-bar'>\n            <SideProfile />\n            <Links />\n        </nav>\n     );\n}\n \nexport default Navbar;","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/saved/Saved.js",["79"],[],"import './Saved.css'\nimport { useState } from 'react'\n\nconst Saved = ({ savedFeeds, setSavedFeeds, currentID, setCurrentID, unsaveHandle }) => {\n\n    return ( \n        <main className=\"saved-feeds\">\n            <h1>Saved Memes</h1>\n            { \n                savedFeeds.map(blog => (\n                    <div className=\"meme-feed-container\" key={blog.id}>\n                        <div className=\"user-who-posted\" >\n                            <p> { blog.name } </p>\n                            <button onClick={() => unsaveHandle(blog.id)} >Unsave</button>                           \n                        </div>\n                        <img src={ blog.src } alt=\"\" className=\"meme-img\" />\n                        <div className=\"user-interactions\">\n                            <div className=\"like-contents\">\n                                <button >Like</button>\n                                <p>  { blog.likes } Likes</p>\n                            </div>\n                        </div>                        \n                        {/* <div className=\"user-interactions\">\n                            <div className=\"like-contents\">\n                                <button onClick={() => likeHandle(blog.id)} >Like</button>\n                                <p>  { blog.likes } Likes</p>\n                            </div>\n                            <button>Share</button>\n                            <button onClick={() => savedFeedHandle(blog.id)} >Save</button>\n                        </div> */}\n                    </div>                    \n                ))\n            }\n        </main>\n     );\n}\n \nexport default Saved;","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/top/TopFeeds.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/header/Header.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/Home.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/MemeFeed.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/CreateMeme.js",["80"],[],"import { useEffect } from \"react\"\n\nconst CreateMeme = ({ \n        create, \n        showInputHandle, \n        createBtn, \n        urlInput ,\n        setUrlInput,\n        createBlogHandle\n}) => {\n\n\n    return ( \n        <article className=\"create-container\">\n            <div className=\"button-create-container\">\n                <p>Create a blog meme</p>\n                <button onClick={showInputHandle} > { createBtn } </button>\n            </div>\n            { create &&\n                <div className=\"input-container\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"URL\" \n                        value={ urlInput }  \n                        onChange={ (e) => setUrlInput(e.target.value) }\n                    /> \n                    <button onClick={ createBlogHandle } >Add to Feed</button>\n                </div>\n            }\n        </article>\n    );\n}\n \nexport default CreateMeme;","/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/home/DeleteModal.js",[],[],"/Users/Harold/Desktop/Coding-projects/meme-blog/src/components/login/Login.js",[],[],{"ruleId":"81","severity":1,"message":"82","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":19},{"ruleId":"81","severity":1,"message":"85","line":1,"column":10,"nodeType":"83","messageId":"84","endLine":1,"endColumn":14},{"ruleId":"81","severity":1,"message":"86","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":18},{"ruleId":"81","severity":1,"message":"82","line":1,"column":10,"nodeType":"83","messageId":"84","endLine":1,"endColumn":19},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used."]